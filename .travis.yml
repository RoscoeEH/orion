language: rust
sudo: required
dist: trusty
services: docker
addons:
    apt:
        packages:
            - libssl-dev
cache: cargo

matrix:
  include:
    - rust: stable
      install:
        - cargo install --force cargo-audit
      script:
        - cargo clean
        - cargo test
        - cargo test --tests --no-default-features
        - cargo audit
    - rust: nightly
      script:
        - cargo clean
        - cargo test
        - cargo test --no-default-features --features nightly
        - cargo test --no-default-features --features no_std --tests
        # First sanitizers with default features
        - RUSTFLAGS="-Z sanitizer=address" ASAN_OPTIONS="detect_odr_violation=0" cargo test --tests --target x86_64-unknown-linux-gnu
        - RUSTFLAGS="-Z sanitizer=leak" cargo +nightly test --tests --target x86_64-unknown-linux-gnu
        # Then with nightly features
        - RUSTFLAGS="-Z sanitizer=address" ASAN_OPTIONS="detect_odr_violation=0" cargo test --no-default-features --features nightly --tests --target x86_64-unknown-linux-gnu
        - RUSTFLAGS="-Z sanitizer=leak" cargo test --no-default-features --features nightly --tests --target x86_64-unknown-linux-gnu
    # Ensure building in no_std is possible
    - env: TARGET=thumbv7em-none-eabihf
      rust: nightly
      install:
        - cargo install xargo || true
        - rustup target install thumbv7em-none-eabihf
        - rustup component add rust-src
      script:
        - xargo build --no-default-features --features no_std --verbose --target $TARGET
    - env: TARGET=i686-unknown-linux-gnu
      rust: stable
      script:
        - cross test --target $TARGET
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: stable
      script:
        - cross test --target $TARGET
  allow_failures:
    - env: TARGET=mips64-unknown-linux-gnuabi64
      rust: stable
      script:
        - cross test --target $TARGET

before_cache: |
  if [[ "$TRAVIS_RUST_VERSION" == nightly ]]; then
    RUSTFLAGS="--cfg procmacro2_semver_exempt" cargo install --force cargo-tarpaulin
  fi
install:
  - cargo install cross || true

after_success: |
  if [[ "$TRAVIS_RUST_VERSION" == nightly ]]; then
    # RUSTFLAGS="--cfg procmacro2_semver_exempt" cargo install cargo-tarpaulin
    # Uncomment the following line for coveralls.io
    # cargo tarpaulin --ciserver travis-ci --coveralls $TRAVIS_JOB_ID
    # Uncomment the following two lines create and upload a report for codecov.io
    cargo tarpaulin --out Xml
    bash <(curl -s https://codecov.io/bash)
  fi
